/*
 * Copyright (C) 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License
 */

syntax = "proto3";

package android.tools.sizereduction.analyzer;

option java_package = "com.android.tools.sizereduction.analyzer";

// Payload that contains the extra info for the suggestion generated by the
// tool.
//
// For example, if the tool is supposed to give a list of images that should be
// converted to Webp, the filenames/paths of these files will be provided
// through this proto.
message Payload {
  oneof content {
    WebpData webp_data = 1;

    BundleSplittingData bundle_splitting_data = 2;

    UncompressedNativeLibsUsage uncompressed_native_libs_usage = 3;
  }

  message WebpData {
    // Info about the file that should be converted to Webp.
    // Always set.
    FileEntryData file = 1;
  }

  // Info about how the bundle currently splits into split APKs
  message BundleSplittingData {
    // ABIs the bundle has native libraries for.
    // Must not be empty (this proto is never used to represent a bundle without
    // native libraries)
    repeated string abis = 1;
  }

  // Info about uncompressed native libraries usage
  message UncompressedNativeLibsUsage {
    // Indicates whether uncompressed native libs are not used because of old
    // version of Bundletool or simply because they are not enabled
    enum Status {
      UNSPECIFIED_STATUS = 0;
      OLD_BUNDLETOOL = 1;
      UNCOMPRESSED_NATIVE_LIBS_NOT_ENABLED = 2;
    }

    // Status of uncompressed native lib usage.
    // Always set.
    Status status = 1;
  }
}

message FileEntryData {
  // Path to the file.
  // Always set.
  string file_path = 1;
}
